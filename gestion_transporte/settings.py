"""
Django settings for gestion_transporte project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url # Importar dj_database_url al inicio

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-$c_s*b+$vvhn^df(bb$9np5tm189=9u*4gi%3vd9!jhxcr9_uy')
# ==============================================================================
# CONFIGURACIÓN DE DEPURACIÓN Y HOSTS (DINÁMICA)
# ==============================================================================
# Detecta si estamos en el entorno de producción de Render
ON_RENDER = os.getenv('RENDER') == 'true'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

if ON_RENDER:
    # Si estamos en Render, confiamos en el hostname que Render nos da
    RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
    if RENDER_EXTERNAL_HOSTNAME:
        ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
    
    # Añadimos el dominio explícitamente como respaldo seguro
    ALLOWED_HOSTS.append('proyecto-migmar-a5fd.onrender.com')

else:
    # Para desarrollo local
    ALLOWED_HOSTS = ['localhost', '127.0.0.1','.ngrok-free.app','*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'flota', # Nuestra app
    'django.contrib.humanize',
    'widget_tweaks',
    'storages', # <--- AÑADIDO: Para la integración con S3
    'mantenimiento', # App de mantenimiento
    'crispy_forms',
    'crispy_bootstrap5',  # Solo si instalaste el pack Bootstrap 5
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestion_transporte.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # Directorio de plantillas base
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestion_transporte.wsgi.application'


# ==============================================================================
# BASE DE DATOS (DINÁMICA)
# ==============================================================================

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

if ON_RENDER:
    # --- Configuración de PRODUCCIÓN (Render) ---
    # Render configura automáticamente la variable de entorno DATABASE_URL
    # dj_database_url la leerá y configurará la conexión.
    DATABASES = {
        'default': dj_database_url.config(
            # Opcional: Mantiene las conexiones abiertas por 600 segundos
            conn_max_age=600,
            # Render requiere SSL para sus conexiones de base de datos
            ssl_require=True 
        )
    }
else:
    # --- Configuración de DESARROLLO (Local) ---
    # Usamos una base de datos SQLite simple para el desarrollo local.
    # Se creará un archivo 'db.sqlite3' en la raíz del proyecto.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i1n/

LANGUAGE_CODE = 'es-mx' # Cambiado a español de México
TIME_ZONE = 'America/Mexico_City'
USE_I18N = True
USE_TZ = True


# ==============================================================================
# ARCHIVOS ESTÁTICOS Y DE MEDIOS (Static & Media)
# ==============================================================================

# --- Configuración de Archivos Estáticos (CSS, JS) ---
STATIC_URL = 'static/'
# Directorio para archivos estáticos en desarrollo
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# Directorio donde 'collectstatic' pondrá los archivos para producción
STATIC_ROOT = BASE_DIR / "staticfiles"

# --- Configuración de Archivos de Medios (Subidos por el usuario) ---
MEDIA_URL = '/media/'
# No se usa MEDIA_ROOT en producción con S3

# --- Configuración de Almacenamiento en S3 (para Boto3 y Django-Storages) ---
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME')
AWS_MEDIA_LOCATION = os.getenv('AWS_MEDIA_LOCATION', 'media') # Directorio 'media' dentro del bucket
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
AWS_DEFAULT_ACL = 'public-read' # Para que los archivos subidos sean visibles
AWS_S3_FILE_OVERWRITE = False # No sobrescribir archivos con el mismo nombre
AWS_QUERYSTRING_AUTH = False # No usar URLs firmadas (queremos URLs públicas)

# --- Configuración de STORAGES (Django 4.2+) ---
if ON_RENDER:
    # --- Configuración de PRODUCCIÓN (S3 para Medios, Whitenoise para Estáticos) ---
    STORAGES = {
        "default": {
            # Backend para MEDIA (ImageField, FileField).
            # Esto hace que {{ object.foto.url }} funcione con S3.
            "BACKEND": "storages.backends.s3.S3Storage",
            "OPTIONS": {
                "location": AWS_MEDIA_LOCATION,
                "file_overwrite": AWS_S3_FILE_OVERWRITE,
                "default_acl": AWS_DEFAULT_ACL,
            },
        },
        "staticfiles": {
            # Backend para STATIC (CSS, JS) en producción.
            "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
        },
    }
    # La URL de medios debe apuntar a S3
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_MEDIA_LOCATION}/'
else:
    # --- Configuración de DESARROLLO (Archivos locales) ---
    STORAGES = {
        "default": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },
    }
    # En desarrollo, los medios se sirven desde el disco local
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ==============================================================================
# REDIRECCIONES Y SEGURIDAD
# ==============================================================================

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = '/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Orígenes de confianza para CSRF
CSRF_TRUSTED_ORIGINS = [
    "https://*.ngrok-free.app", # Para cualquier túnel de ngrok
    "https://proyecto-migmar-a5fd.onrender.com",
    'https://fed490745f3c.ngrok-free.app'# Tu dominio de Render
]
if ON_RENDER:
    # Añadir el dominio de Render dinámicamente
    RENDER_EXTERNAL_URL = os.environ.get('RENDER_EXTERNAL_URL')
    if RENDER_EXTERNAL_URL:
        CSRF_TRUSTED_ORIGINS.append(RENDER_EXTERNAL_URL)

# Configuraciones de seguridad para producción
if ON_RENDER:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000 # 1 año
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True


# ==============================================================================
# CONFIGURACIONES DE LA APLICACIÓN (FLOTA)
# ==============================================================================

INVENTORY_ALERT_SETTINGS = {
    'DIESEL': {
        'threshold': 4000,  # Litros
        'recipients': ['estadisticas@transportesmigmar.com', 'gerenciageneral@transportesmigmar.com','almacen@transportesmigmar.com'],
    },
    'UREA': {
        'threshold': 450,   # Litros
        'recipients': ['estadisticas@transportesmigmar.com', 'gerenciageneral@transportesmigmar.com','almacen@transportesmigmar.com'],
    },
    'ACEITE': {
        'threshold': 90,    # Litros
        'recipients': ['estadisticas@transportesmigmar.com', 'gerenciageneral@transportesmigmar.com','almacen@transportesmigmar.com'],
    },
}

# Configuración del servidor de correo
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = 'Flota <estadisticas@transportesmigmar.com>'

# Configuración de Twilio
TWILIO_ACCOUNT_SID = os.getenv('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = os.getenv('TWILIO_AUTH_TOKEN')
TWILIO_WHATSAPP_FROM = 'whatsapp:+14155238886'
WHATSAPP_RECIPIENTS = [
    'whatsapp:+528182807927',
    'whatsapp:+528180298767',
    'whatsapp:+528123465830'
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'